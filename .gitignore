# Rust
# Generated by Cargo
# will have compiled files and executables
**/target/
**/*.rs.bk
**/Cargo.lock

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
release-manager/Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Rust analyzer
rust-project.json

# OCaml
*.annot
*.cmo
*.cma
*.cmi
*.a
*.o
*.cmx
*.cmxs
*.cmxa

# OCaml build directories
_build/
**/_build/

# Dune build cache
**/.dune-cache/
**/install

# OCaml package manager files
*.opam.locked
_opam/

# OCaml native code
*.exe
*.native
*.byte

# Dhall
# No specific ignores needed for Dhall source files
# But we might want to ignore generated/compiled outputs
**/out/
**/releases/

# Ruby (for deb-s3)
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
**/.bundle/
**/vendor/bundle
/lib/bundler/man/

# for a library or gem, you might want to ignore these files since the code is
# intended to run in multiple environments; otherwise, check them in:
# Gemfile.lock
# .ruby-version
# .ruby-gemset

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
.rvmrc

# Used by RuboCop. Remote config files pulled in from inherit_from directive.
# .rubocop-https?--*

# General Development
# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Vim
*.swp
*.swo
*.swn
.netrwhist

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# Windows
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# node_modules (if any Node.js tooling is used)
node_modules/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Temporary folders
tmp/
temp/

# Cache directories
.cache/
**/.cache/

# Build artifacts
build/
dist/
out/

# Test artifacts
test-results/
coverage/

# Local environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Database files
*.db
*.sqlite
*.sqlite3

# Compiled binaries
release-manager/target/release/release-manager
release-manager/target/debug/release-manager

# Benchmarking
**/criterion/

# Debian package building
*.deb
*.dsc
*.tar.gz
*.tar.xz
*.changes
*.buildinfo

# GPG keys and secrets
*.key
*.pem
*.p12
*.pfx
id_rsa*
*.secret

# Cache and temporary build files
.buildkite/
buildkite-cache/
cache/
debian-cache/

# Storage and backup
backup/
archive/
storage/

# Documentation builds
**/target/doc/
docs/_build/
site/

# Editor configs that shouldn't be shared
.editorconfig.local

# Project specific
# Hetzner connection details (already in CLAUDE.md but ensure no accidental commits)
storagebox.key
hetzner-*.key

# CI/CD artifacts
artifacts/
release-artifacts/

# Local development
local/
dev/
scratch/